name: PR Unit Testing

on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  # Triggers the workflow on pull request events
  pull_request:

env:
  PHP_PREF_MIN_VERSION: '7.4'
  WP_STABLE_VERSION: '5.7.*'
  WP_MULTISITE: 0
  WC_STABLE_VERSION: '5.7.*'
  COMPOSER_VERSION: '2.2'
  ACTION_VERSION: 2

jobs:
  pr_unit_testing:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        include:
          - job-name: 'Unit Test Latest Stable Requirements'
            bleeding-edge: false
            php-version: '7.4'
            wordpress-version: '5.7.*'
            wp-multisite-mode: 0
            woocommerce-version: '5.7.*'

    name: '${{ matrix.job-name }} (PHP:${{ matrix.php-version }}/WP:${{ matrix.wordpress-version }}/WC:${{ matrix.woocommerce-version }})'

    steps:
    - name: Checkout Code
      # https://github.com/marketplace/actions/checkout
      uses: actions/checkout@v2

    - name: Get Composer Cache Directory
      id: composer-cache
      if: ${{ !env.ACT }}
      run: echo "::set-output name=dir::$(composer config cache-files-dir)"

    - name: Cache Composer dependencies
      if: ${{ !env.ACT }}
      uses: actions/cache@v2
      env:
        composer-cache-name: cache-composer
      with:
        path: ${{ steps.composer-cache.outputs.dir }}
        key: ${{ runner.os }}-build-${{ env.composer-cache-name }}-wp-${{ matrix.wordpress-version }}-wc-${{ matrix.woocommerce-version }}-v${{ env.ACTION_VERSION }}-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-build-${{ env.composer-cache-name }}-wp-${{ matrix.wordpress-version }}-wc-${{ matrix.woocommerce-version }}-v${{ env.ACTION_VERSION }}-

    - name: Setup Node Environment
      # https://github.com/marketplace/actions/setup-node-js-environment
      uses: actions/setup-node@v2
      with:
        node-version-file: '.nvmrc'
        cache: ${{ !env.ACT && 'npm' || '' }}

    - name: Setup PHP & Composer Environment
      # https://github.com/marketplace/actions/setup-php-action
      uses: shivammathur/setup-php@v2
      with:
        php-version: "${{ matrix.php-version }}"
        tools: "composer:${{ env.COMPOSER_VERSION }}"

    - name: Environment Check
      run: php -v && composer --version

    - name: Require Specified WordPress & WooCommerce Version
      run: composer require johnpbloch/wordpress-core:${{ matrix.wordpress-version }} php-stubs/wordpress-stubs:${{ matrix.wordpress-version }} wp-phpunit/wp-phpunit:${{ matrix.wordpress-version }} wpackagist-plugin/woocommerce:${{ matrix.woocommerce-version }} php-stubs/woocommerce-stubs:${{ matrix.woocommerce-version }} --dev --prefer-source --update-with-all-dependencies

    - name: Install Composer Dependencies
      run: composer install --prefer-dist

    - name: NPM Setup
      run: npm ci

    - name: Unit Tests
      run: npm run test
