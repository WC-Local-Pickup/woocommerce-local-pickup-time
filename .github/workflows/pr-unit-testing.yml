name: PR Unit Testing

on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  # Triggers the workflow on pull request events
  pull_request:

env:
  PHP_PREF_MIN_VERSION: '7.4'
  WP_STABLE_VERSION: '5.7.*'
  WP_MULTISITE: 0
  WC_STABLE_VERSION: '5.7.*'

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        include:
          - job-name: 'Unit Test Latest Stable Requirements'
            bleeding-edge: false
            php-version: '7.4'
            wordpress-version: '5.7.*'
            wp-multisite-mode: 0
            woocommerce-version: '5.7.*'

    name: '${{ matrix.job-name }} (PHP:${{ matrix.php-version }}/WP:${{ matrix.wordpress-version }}/WC:${{ matrix.woocommerce-version }})'

    steps:
    - name: Checkout Code
      uses: actions/checkout@v2

    - name: Setup PHP Environment
      uses: shivammathur/setup-php@v2
      # https://github.com/marketplace/actions/setup-php-action
      with:
        php-version: ${{ matrix.php-version }}
        tools: composer:v2

    - name: Setup Node Environment
      uses: actions/setup-node@v1
      # https://github.com/marketplace/actions/setup-node-js-environment
      with:
        node-version: 14.x

    - name: Cache Composer dependencies
      uses: actions/cache@v2
      env:
        composer-cache-name: cache-vendor
      with:
        path: ~/vendor
        key: ${{ runner.os }}-build-${{ env.composer-cache-name }}-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-build-${{ env.composer-cache-name }}-
          ${{ runner.os }}-build-
          ${{ runner.os }}-

    - name: Require Specified WordPress Version
      run: composer require johnpbloch/wordpress-core:${{ matrix.wordpress-version }} --dev --prefer-source --update-with-all-dependencies

    - name: Require Specified WooCommerce Version
      run: composer require wpackagist-plugin/woocommerce:${{ matrix.woocommerce-version }} --dev --prefer-source --update-with-all-dependencies

    - name: Install Composer Dependencies
      run: composer install

    - name: NPM Setup
      run: npm ci

    - name: Unit Tests
      run: npm run test
